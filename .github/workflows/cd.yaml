concurrency: production
on:
  push:
    branches:
      - main
jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix-environments: ${{ steps.environment-folders.outputs.matrix }}
    steps:
      - name: Generate matrix | Infrastructure
        id: environment-folders
        uses: hellofresh/action-changed-files@v3
        with:
          pattern: (?P<environment>[^/]+)/versions

  deploy:
    needs: [ generate-matrix ]
    environment: production
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix-environments) }}
    if: ${{ fromJson(needs.generate-matrix.outputs.matrix-environments).include[0] }} # skip if the matrix is empty!
    steps:
      - name: Frontend Zip Name
        id: frontendZip
        run: echo "::set-output name=name::frontend-build-$(date +'%Y-%m-%d-%s').zip"
      - name: Repo Checkout
        uses: actions/checkout@v4
      - name: Install sshpass
        run: sudo apt install sshpass
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          cat >>~/.ssh/config <<END
          Host prod
            HostName $SSH_HOST
            User $SSH_USER
          END
          ssh-keyscan -H "$SSH_HOST" > ~/.ssh/known_hosts
        env:
          SSH_USER: ${{ vars.SSH_USER_NAME }}
          SSH_HOST: ${{ vars.SSH_HOST }}
      - name: Load .env file
        uses: aarcangeli/load-dotenv@v1.0.0
        with:
          path: ${{matrix.environment}}
          filenames: versions
          if-file-not-found: error
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.5.2
        with:
          node-version: 16
      - name: clone frontend
        uses: actions/checkout@v4.1.1
        with:
          repository: 'ricom/Strategienavigator-frontend'
          ref: ${{ env.FRONTEND_HASH}}
          path: 'frontend'
      - name: build frontend
        working-directory: frontend
        env:
          REACT_APP_CLIENT_ID: ${{ secrets.FRONTEND_CLIENT_ID}}
          REACT_APP_CLIENT_SECRET: '${{ secrets.FRONTEND_CLIENT_SECRET }}'
          REACT_APP_API: '${{ vars.BACKEND_URL }}'
        run: |
          npm install
          npm run build
          cd build
          zip -r build *
      - name: Copy Frontend to Server
        env:
          SSHPASS: ${{ secrets.SSH_USER_PASSWORD }}
          BACKUPS: ${{ vars.BACKUP_PATH}}
          FRONTEND_NAME: ${{ steps.frontendZip.outputs.name }}
        run: |
          sshpass -e scp frontend/build/build.zip prod:$BACKUPS/$FRONTEND_NAME
      - name: Checkout backend hash
        env:
          SSHPASS: ${{ secrets.SSH_USER_PASSWORD }}
          PUBLIC_HTML: ${{ vars.PUBLIC_HTML_PATH }}
        run:
          sshpass -e ssh prod 'cd $PUBLIC_HTML && git fetch && git checkout -f $BACKEND_HASH'

      - name: Install frontend
        env:
          SSHPASS: ${{ secrets.SSH_USER_PASSWORD }}
          PUBLIC_HTML: ${{ vars.PUBLIC_HTML_PATH }}
          BACKUPS: ${{ vars.BACKUP_PATH}}
          FRONTEND_NAME: ${{ steps.frontendZip.outputs.name }}
        run:
          sshpass -e ssh prod 'python $PUBLIC_HTML/frontend_patcher.py -s $BACKUPS/$FRONTEND_NAME -t $PUBLIC_HTML'


